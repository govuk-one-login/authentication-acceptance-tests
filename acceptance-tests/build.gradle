plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

def dependencyVersions = [
    junit_version: '5.11.4',
    cucumber_version: '7.20.1',
    axe_version: '3.0',
    selenium_java_version: '4.27.0',
    aws_sdk_v2_version: "2.30.0",
    json_version: '20250107',
    rest_assured: '5.5.0'
]

dependencies {
    implementation("org.apache.maven.plugins:maven-surefire-plugin:3.2.5")

    testImplementation(platform("software.amazon.awssdk:bom:${dependencyVersions.aws_sdk_v2_version}"))
    testImplementation(platform("io.cucumber:cucumber-bom:${dependencyVersions.cucumber_version}"))
    testImplementation(platform("org.seleniumhq.selenium:selenium-dependencies-bom:${dependencyVersions.selenium_java_version}"))

    testImplementation("software.amazon.awssdk:sso")
    testImplementation("software.amazon.awssdk:ssooidc")
    testImplementation("software.amazon.awssdk:dynamodb")
    testImplementation("software.amazon.awssdk:dynamodb-enhanced")
    testImplementation("software.amazon.awssdk:ssm")

    testImplementation("io.cucumber:cucumber-java")
    testImplementation("io.cucumber:cucumber-junit")
    testImplementation("io.cucumber:cucumber-picocontainer")

    testImplementation("org.seleniumhq.selenium:selenium-java")
    testImplementation("com.deque:axe-selenium:${dependencyVersions.axe_version}")

    testImplementation(platform("org.junit:junit-bom:${dependencyVersions.junit_version}"))
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")

    testImplementation("org.apache.commons:commons-text:1.13.0")

    testImplementation("commons-codec:commons-codec:1.17.2")

    testImplementation("com.google.guava:guava:33.4.0-jre")

    testImplementation("org.bouncycastle:bcpkix-jdk18on:1.80")
    testImplementation("org.springframework.security:spring-security-crypto:6.4.2")

    testImplementation("org.json:json:${dependencyVersions.json_version}")
    testImplementation("io.rest-assured:rest-assured:${dependencyVersions.rest_assured}")
}

group = 'acceptance-tests'
version = '1.0.0'
description = 'acceptance-tests'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            def no_of_threads = System.getenv('PARALLEL_BROWSERS') ?: 1
            args = [
                '--plugin',
                'html:target/cucumber-report/index.html',
                '--plugin',
                'json:target/cucumber-report/Cucumber.json',
                '--plugin',
                'pretty',
                '--glue',
                'uk.gov.di.test.step_definitions',
                'src/test/resources',
                '--threads',
                no_of_threads
            ]
        }
    }
}
