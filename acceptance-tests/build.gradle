plugins {
    id 'java'
    id 'maven-publish'
    alias(libs.plugins.spotless)
    alias(libs.plugins.sonarqube)
    id 'application'
}

repositories {
    mavenCentral()
    maven {
        url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
    }
}



dependencies {
    implementation libs.maven.surefire.plugin

    testImplementation platform(libs.aws.bom)
    testImplementation platform(libs.cucumber.bom)
    testImplementation platform(libs.selenium.bom)
    testImplementation platform(libs.junit.bom)

    testImplementation libs.bundles.aws.core
    testImplementation libs.bundles.auth
    testImplementation libs.bundles.cucumber
    testImplementation libs.bundles.selenium
    testImplementation libs.bundles.junit
    testImplementation libs.bundles.commons
    testImplementation libs.bundles.aws.lambda

    testImplementation libs.bouncycastle
    testImplementation libs.spring.security.crypto
    testImplementation libs.json
    testImplementation libs.rest.assured
    testImplementation libs.slf4j.nop
    testImplementation libs.awaitility
    testImplementation libs.gson
}

group = 'uk.gov.di'
version = '1.0-SNAPSHOT'
description = 'acceptance-tests'

sonar {
    properties {
        property "sonar.projectKey", "govuk-one-login_authentication-acceptance-tests"
        property "sonar.organization", "govuk-one-login"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

spotless {
    String ref = project.properties["ratchetFrom"]
    if (ref != null) {
        ref = ref.trim()
        if (ref.length() > 0) {
            ratchetFrom ref
        }
    }
    java {
        target '**/*.java'
        googleJavaFormat('1.11.0').aosp()
        importOrder '', 'javax', 'java', '\\#'
    }
    groovyGradle {
        target "**/*.gradle"
        greclipse().configFile("../tools/spotless-gradle.properties")
    }
}

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release = 17
}

task cucumber() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            mainClass = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            def no_of_threads = System.getenv('PARALLEL_BROWSERS') ?: 1
            args = [
                '--plugin',
                'html:target/cucumber-report/index.html',
                '--plugin',
                'json:target/cucumber-report/Cucumber.json',
                '--plugin',
                'pretty',
                '--glue',
                'uk.gov.di.test.step_definitions',
                'src/test/resources',
                '--threads',
                no_of_threads
            ]
        }
    }
}

task downloadCucumberDependencies {
    doLast {
        // Force download of all dependencies
        configurations.cucumberRuntime.files
    }
}
